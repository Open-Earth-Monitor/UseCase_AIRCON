---
title: "EEA Air Quality Stations"
author: "Johannes Heisig"
date: "`r Sys.Date()`"
format: 
  html: default
  gfm: default
knitr:
  opts_knit:
    root.dir: "/mnt/cloud/wwu1/ec_bronze/_nogroup/ae78a1ca-a0e8-4e4e-8992-69c34947db65/UseCase_AIRCON"
---

```{r pkgs}
suppressPackageStartupMessages({
  library(dplyr)
  library(tidyr)
  library(sf)
  library(arrow)
  library(geoarrow)
})
```

# Stations

Create a table with rows for each station. Each has a type (background, industrial, traffic), an area label (rural, urban, suburban), and coordinates in lon/lat.

Station [meta data file](https://discomap.eea.europa.eu/map/fme/metadata/PanEuropean_metadata.csv) comes from EEA.

```{r}
station_meta = read.table("AQ_stations/PanEuropean_metadata.csv", 
                          sep = "\t", header = T) |> 
  select(AirQualityStationEoICode, Countrycode, 
         Longitude, Latitude,
         StationType = AirQualityStationType, 
         StationArea = AirQualityStationArea,
         AirPollutant = AirPollutantCode) |> 
  mutate(AirPollutant = factor(basename(AirPollutant),
                               levels = c(6001, 5, 8, 7),
                               labels = c("PM2.5", "PM10", "NO2", "O3"))) |> 
  filter(!is.na(AirPollutant)) |> 
  unique() |> 
  mutate(AirQualityStationEoICode = as.factor(AirQualityStationEoICode),
         Countrycode = as.factor(Countrycode),
         StationType = as.factor(StationType),
         StationArea = as.factor(StationArea)) |> 
  group_by(AirQualityStationEoICode, Countrycode, 
           StationType, StationArea, AirPollutant) |>
  summarise(Longitude = mean(Longitude), 
            Latitude = mean(Latitude), .groups = 'drop') |> 
  group_by(AirQualityStationEoICode, StationArea, AirPollutant) |> 
  # if two types registered for 1 station, label them as non-background (n=45).
  filter(!(n() > 1 & !StationType == "background")) |> 
  ungroup()

station_laea = 
  select(station_meta, AirQualityStationEoICode, Longitude, Latitude) |> 
  unique() |> 
  st_as_sf(coords = c("Longitude","Latitude"), crs = 4326) |> 
  st_transform(st_crs(3035))
```


# Result

```{r check-station-meta}
summary(station_meta)

table(station_meta$AirPollutant, station_meta$StationType)
table(station_meta$AirPollutant, station_meta$StationArea)
table(station_meta$StationArea, station_meta$StationType)

station_final = select(station_meta, -AirPollutant) |> 
  group_by(AirQualityStationEoICode, Countrycode) |> 
  filter(row_number()==1)

summary(station_final)
```

# Write files

```{r}
write_parquet(station_final, "AQ_stations/EEA_stations_meta.parquet")


station_final_sf = st_as_sf(station_final, crs = 4326, remove = F, 
                            coords = c("Longitude","Latitude")) |> 
  st_transform(st_crs(3035)) 

write_geoparquet(station_final_sf, 
                 "AQ_stations/EEA_stations_meta_sf.parquet")
```


```{r}
filter(station_final_sf, between(Longitude, -25, 45))["StationType"] |> 
  plot(axes=T, pch=16, cex = 0.7)
```

