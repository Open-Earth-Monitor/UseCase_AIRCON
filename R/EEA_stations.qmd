---
title: "EEA Air Quality Stations"
author: "Johannes Heisig"
date: "`r Sys.Date()`"
format: 
  gfm: default
  html: default
knitr:
  opts_knit:
    root.dir: "/mnt/cloud/wwu1/ec_bronze/_nogroup/ae78a1ca-a0e8-4e4e-8992-69c34947db65/UseCase_AIRCON"
---

```{r pkgs}
suppressPackageStartupMessages({
  library(dplyr)
  library(tidyr)
  library(sf)
  library(arrow)
  library(geoarrow)
})
```

# Stations

Create a table with rows for each station. Each has a type (background, industrial, traffic), an area label (rural, urban, suburban), and coordinates in lon/lat.
The original station meta data table can be downloaded from the [EEA website](https://discomap.eea.europa.eu/App/AQViewer/index.html?fqn=Airquality_Dissem.b2g.measurements).

```{r}
station_meta = read.csv("AQ_stations/EEA_station_meta.csv") |> 
  select(Sampling.Point.Id, Air.Quality.Station.EoI.Code, Air.Pollutant, 
         Longitude, Latitude, 
         Station.Area = Air.Quality.Station.Area, 
         Station.Type = Air.Quality.Station.Type) |> 
  filter(Air.Pollutant %in% c("PM2.5", "PM10", "NO2", "O3")) |> 
  mutate(Air.Pollutant = as.factor(Air.Pollutant),
         Air.Quality.Station.EoI.Code = as.factor(Air.Quality.Station.EoI.Code),
         Countrycode = as.factor(substr(Air.Quality.Station.EoI.Code,1,2)),
         Station.Type = as.factor(Station.Type),
         Station.Area = as.factor(Station.Area)) |> 
  unique() |> 
  # make sure there are no variations in coordinates
  group_by(Sampling.Point.Id, Air.Quality.Station.EoI.Code, Countrycode,
           Station.Type, Station.Area, Air.Pollutant) |>
  summarise(Longitude = mean(Longitude), 
            Latitude = mean(Latitude), .groups = 'drop') |> 
  group_by(Sampling.Point.Id, Station.Area, Air.Pollutant) |> 
  # if two types registered for 1 station, label them as non-background (n=45).
  filter(!(n() > 1 & !Station.Type == "background")) |> 
  ungroup()

write_parquet(station_meta, "AQ_stations/EEA_stations_meta_SamplingPoint.parquet")

# turn unique stations into spatial point data
station_laea = select(station_meta, -Sampling.Point.Id) |> 
  unique() |> 
  st_as_sf(coords = c("Longitude","Latitude"), crs = 4326,  remove = F) |> 
  st_transform(st_crs(3035))
```


# Result

Check properties of unique stations.

```{r check-station-meta}
summary(station_laea)

table(station_laea$Air.Pollutant, station_laea$Station.Type)
table(station_laea$Air.Pollutant, station_laea$Station.Area)
table(station_laea$Station.Area, station_laea$Station.Type)

station_final = select(station_laea, -Air.Pollutant) |> 
  group_by(Air.Quality.Station.EoI.Code, Countrycode) |> 
  filter(row_number()==1) |> 
  ungroup()

summary(station_final)
```

# Write files

```{r}

st_drop_geometry(station_final) |> 
  write_parquet("AQ_stations/EEA_stations_meta_table.parquet")

write_geoparquet(station_final, 
                 "AQ_stations/EEA_stations_meta_sf.parquet")
```


```{r}
filter(station_final, between(Longitude, -25, 45))["Station.Type"] |> 
  plot(axes=T, pch=16, cex = 0.7)
```

